#!/bin/bash
#
# benchmark [-timeout secs (default don't time out)] [-wait secs (default 30)]
# [-script filename (default lclam_test)] [-dir directory (default tests)]
#
# Run benchmark over (predetermined) list of theorems.
#
# The arguments indicate how long each lambdaclam process should be
# allowed before timing out, and the amount of time to wait between
# spawning each lambdaclam subprocess (they run in the background).
# 

setenv () 
{ 
    export $1="$2"
}

setenv wait 60
setenv timeout "-timeout 300"
setenv test_program lclam_test
setenv report_dir tests

if [ "$1" == "-wait" ] ; then
 setenv wait $2
fi
if [ "$3" == "-wait" ] ; then
 setenv wait $4
fi
if [ "$5" == "-wait" ] ; then
 setenv wait $6
fi
if [ "$7" == "-wait" ] ; then
 setenv wait $8
fi
if [ "$1" == "-timeout" ] ; then
 setenv timeout "-timeout $2"
fi
if [ "$3" == "-timeout" ] ; then
 setenv timeout "-timeout $4"
fi
if [ "$5" == "-timeout" ] ; then 
 setenv timeout "-timeout $6"
fi
if [ "$7" == "-timeout" ] ;  then
 setenv timeout "-timeout $8"
fi
if [ "$1" == "-script" ] ; then
 setenv test_program $2
fi
if [ "$3" == "-script" ] ;   then
 setenv test_program $4
fi
if [ "$5" == "-script" ] ; then
 setenv test_program $6
fi
if [ "$7" == "-script" ] ; then
 setenv test_program $8
fi
if [ "$1" == "-dir" ] ; then
 setenv report_dir $2
fi
if [ "$3" == "-dir" ] ; then
 setenv report_dir $4
fi
if [ "$5" == "-dir" ] ; then
 setenv report_dir $6
fi
if [ "$7" == "-dir" ] ; then
 setenv report_dir $8
fi


mkdir $report_dir
echo \\documentclass\{article\} > $report_dir/report.tex
echo \\begin\{document\} >> $report_dir/report.tex
echo \\section\{\$\\lambda\$Clam timings, \\today\} >> $report_dir/report.tex
echo Timings in minutes and seconds. Fail means failed proof attempt. N means proof attempt did not fail cleanly \(e.g. it gave a segmentation fault\). >> $report_dir/report.tex
echo \\begin\{center\}\\begin\{tabular\}\[t\]\{llp\{2in\}\} >> $report_dir/report.tex
echo Theorem \& Time \(CPU mins:secs\) \& Note\\\\ >> $report_dir/report.tex

for x in leqsumord leqsucord leqreflord ; do
 echo Trying to prove $x.
 ($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' ordinal $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in leqsumord2 times0leftord iterlemma ; do
  echo Trying to prove $x.
  ($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' ordinal $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in allList_or_left allList_or_right ; do
  echo Trying to prove $x.
  ($LCLAM_HOME/bin/$test_program $x '(induction_top with_critics)' $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in exptimes assp_sy doublehalf halfplus ; do
  echo Trying to prove $x.
  ($LCLAM_HOME/bin/$test_program $x '(induction_top with_critics)' $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in qrevcorrect leqnth nthapp memorev orevqrev qrevqrev rotlen allList_omember allList_omember_imp1 allList_omember_imp2 ;do
  echo Trying to prove $x.
  ($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' map_benchmarks $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in greatercancel greatertimes grsqsuc lesseq subsetcons times_less ; do
echo Trying to prove $x.
($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' clam_corpus $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in binom_one ; do
echo Trying to prove $x.
($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' clam_corpus3 $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in commthree evenm multzero zerotimes3 prodlwave; do
echo Trying to prove $x.
($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' clam_corpus2 $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done


for x in fixpoint ; do
  echo Trying to prove $x.
  ($LCLAM_HOME/bin/lclam_test_lib $x fixpoint_top_meth ordinal $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in  gcd_synth ; do
  echo Trying to prove $x.
  ($LCLAM_HOME/bin/$test_program $x '(induction_top with_critics)' $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done


for x in mapapn ; do
  echo Trying to prove $x.
  ($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' map_benchmarks $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in iwc002 iwc009_petes_nasty_theorem ; do
echo Trying to prove $x.
($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' challenges $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in ic8 icT9 icT14 icT16 icT17 icT18 icT19 icT20 icT22 icT23 icT24 icT25 icT26; do
  echo Trying to prove $x.
  ($LCLAM_HOME/bin/lclam_test_lib $x  '(induction_top with_critics)' ireland_critics_lemma_spec $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex) 
done

for x in sqr sg_pair sg_pair2 sg_even; do
	echo Trying to prove $x.
	($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top exi)' smaill_green_syn_ex $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex)
done

for x in sqr divides_zero zero_divides divides_one divides_trans divides_plus divides_sub divides_lmul divides_rmul ; do
	echo Trying to prove $x.
	($LCLAM_HOME/bin/lclam_test_lib $x 'divides_meth' control_divides $timeout >& $report_dir/$x.tex ; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex)
done

for x in dieter_unblock cancel_thm; do
    echo Trying to prove $x.
	($LCLAM_HOME/bin/lclam_test_lib $x '(induction_top with_critics)' ripple_book $timeout >& $report_dir/$x.tex; $LCLAM_HOME/bin/report $report_dir/$x.tex >> $report_dir/report.tex)
done

echo '\\end\{tabular\}\\end\{center\}' >> $report_dir/report.tex
echo '\\end\{document\}' >> $report_dir/report.tex

